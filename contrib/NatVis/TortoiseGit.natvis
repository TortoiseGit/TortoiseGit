<?xml version="1.0" encoding="utf-8"?>
<!-- https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2022 -->
<!-- https://github.com/microsoft/STL/blob/main/stl/debugger/STL.natvis -->
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="CGitHash">
    <DisplayString Condition="m_type == 0">unknown hash</DisplayString>
    <DisplayString Condition="m_type == 1">SHA1: {m_hash[0],nvoxb}{m_hash[1],nvoxb}{m_hash[2],nvoxb}{m_hash[3],nvoxb}{m_hash[4],nvoxb}{m_hash[5],nvoxb}{m_hash[6],nvoxb}{m_hash[7],nvoxb}{m_hash[8],nvoxb}{m_hash[9],nvoxb}{m_hash[10],nvoxb}{m_hash[11],nvoxb}{m_hash[12],nvoxb}{m_hash[13],nvoxb}{m_hash[14],nvoxb}{m_hash[15],nvoxb}{m_hash[16],nvoxb}{m_hash[17],nvoxb}{m_hash[18],nvoxb}{m_hash[19],nvoxb}</DisplayString>
    <DisplayString Condition="m_type == 2">SHA256: {m_hash[0],nvoxb}{m_hash[1],nvoxb}{m_hash[2],nvoxb}{m_hash[3],nvoxb}{m_hash[4],nvoxb}{m_hash[5],nvoxb}{m_hash[6],nvoxb}{m_hash[7],nvoxb}{m_hash[8],nvoxb}{m_hash[9],nvoxb}{m_hash[10],nvoxb}{m_hash[11],nvoxb}{m_hash[12],nvoxb}{m_hash[13],nvoxb}{m_hash[14],nvoxb}{m_hash[15],nvoxb}{m_hash[16],nvoxb}{m_hash[17],nvoxb}{m_hash[18],nvoxb}{m_hash[19],nvoxb}{m_hash[20],nvoxb}{m_hash[21],nvoxb}{m_hash[22],nvoxb}{m_hash[23],nvoxb}{m_hash[24],nvoxb}{m_hash[25],nvoxb}{m_hash[26],nvoxb}{m_hash[27],nvoxb}{m_hash[28],nvoxb}{m_hash[29],nvoxb}{m_hash[30],nvoxb}{m_hash[31],nvoxb}</DisplayString>
  </Type>
  <Type Name="git_oid">
    <DisplayString Condition="type == 1">SHA1: {id[0],nvoxb}{id[1],nvoxb}{id[2],nvoxb}{id[3],nvoxb}{id[4],nvoxb}{id[5],nvoxb}{id[6],nvoxb}{id[7],nvoxb}{id[8],nvoxb}{id[9],nvoxb}{id[10],nvoxb}{id[11],nvoxb}{id[12],nvoxb}{id[13],nvoxb}{id[14],nvoxb}{id[15],nvoxb}{id[16],nvoxb}{id[17],nvoxb}{id[18],nvoxb}{id[19],nvoxb}</DisplayString>
    <DisplayString Condition="type == 2">SHA256: {id[0],nvoxb}{id[1],nvoxb}{id[2],nvoxb}{id[3],nvoxb}{id[4],nvoxb}{id[5],nvoxb}{id[6],nvoxb}{id[7],nvoxb}{id[8],nvoxb}{id[9],nvoxb}{id[10],nvoxb}{id[11],nvoxb}{id[12],nvoxb}{id[13],nvoxb}{id[14],nvoxb}{id[15],nvoxb}{id[16],nvoxb}{id[17],nvoxb}{id[18],nvoxb}{id[19],nvoxb}{id[20],nvoxb}{id[21],nvoxb}{id[22],nvoxb}{id[23],nvoxb}{id[24],nvoxb}{id[25],nvoxb}{id[26],nvoxb}{id[27],nvoxb}{id[28],nvoxb}{id[29],nvoxb}{id[30],nvoxb}{id[31],nvoxb}</DisplayString>
  </Type>
  <Type Name="object_id">
    <DisplayString Condition="algo == 0">unknown hash</DisplayString>
    <DisplayString Condition="algo == 1">SHA1: {hash[0],nvoxb}{hash[1],nvoxb}{hash[2],nvoxb}{hash[3],nvoxb}{hash[4],nvoxb}{hash[5],nvoxb}{hash[6],nvoxb}{hash[7],nvoxb}{hash[8],nvoxb}{hash[9],nvoxb}{hash[10],nvoxb}{hash[11],nvoxb}{hash[12],nvoxb}{hash[13],nvoxb}{hash[14],nvoxb}{hash[15],nvoxb}{hash[16],nvoxb}{hash[17],nvoxb}{hash[18],nvoxb}{hash[19],nvoxb}</DisplayString>
    <DisplayString Condition="algo == 2">SHA256: {hash[0],nvoxb}{hash[1],nvoxb}{hash[2],nvoxb}{hash[3],nvoxb}{hash[4],nvoxb}{hash[5],nvoxb}{hash[6],nvoxb}{hash[7],nvoxb}{hash[8],nvoxb}{hash[9],nvoxb}{hash[10],nvoxb}{hash[11],nvoxb}{hash[12],nvoxb}{hash[13],nvoxb}{hash[14],nvoxb}{hash[15],nvoxb}{hash[16],nvoxb}{hash[17],nvoxb}{hash[18],nvoxb}{hash[19],nvoxb}{hash[20],nvoxb}{hash[21],nvoxb}{hash[22],nvoxb}{hash[23],nvoxb}{hash[24],nvoxb}{hash[25],nvoxb}{hash[26],nvoxb}{hash[27],nvoxb}{hash[28],nvoxb}{hash[29],nvoxb}{hash[30],nvoxb}{hash[31],nvoxb}</DisplayString>
  </Type>

  <Type Name="git_strarray">
    <DisplayString>{{ size={count} }}</DisplayString>
    <Expand>
      <Item Name="[count]">count</Item>
      <ArrayItems>
          <Size>count</Size>
          <ValuePointer>strings</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="CSmartBuffer&lt;*,*&gt;">
    <DisplayString>CSmartBuffer({&quot;$T1&quot;,s8b}): {m_Ref}</DisplayString>
  </Type>

  <Type Name="CSmartLibgit2Ref&lt;*,*&gt;">
    <DisplayString Condition="m_Ref == 0">empty</DisplayString>
    <DisplayString>CSmartLibgit2Ref({&quot;$T1&quot;,s8b}): {m_Ref}</DisplayString>
    <Expand>
      <Item Condition="m_Ref != 0" Name="[ptr]">m_Ref</Item>
    </Expand>
  </Type>

  <Type Name="CSmartHandle&lt;*,*&gt;">
    <DisplayString Condition="m_Handle == 0">empty</DisplayString>
    <DisplayString>CSmartHandle({&quot;$T1&quot;,s8b}): {m_Handle}</DisplayString>
    <Expand>
      <Item Condition="m_Ref != 0" Name="[ptr]">m_Ref</Item>
    </Expand>
  </Type>

  <Type Name="CTGitPath">
    <DisplayString Condition="(m_sFwdslashPath.m_pszData == 0 || m_sFwdslashPath.m_pszData[0] == 0) &amp;&amp; (m_sBackslashPath.m_pszData == 0 || m_sBackslashPath.m_pszData[0] == 0)">empty</DisplayString>
    <DisplayString Condition="m_sFwdslashPath.m_pszData != 0 &amp;&amp; m_sFwdslashPath.m_pszData[0] != 0">{m_sFwdslashPath.m_pszData,su}</DisplayString>
    <DisplayString Condition="m_sBackslashPath.m_pszData != 0 &amp;&amp; m_sBackslashPath.m_pszData[0] != 0">{m_sBackslashPath.m_pszData,su}</DisplayString>
    <Expand>
      <Item Name="IsDir" Condition="m_bDirectoryKnown">m_bIsDirectory</Item>
      <Item Name="Exists" Condition="m_bExistsKnown">m_bExists</Item>
      <Item Name="HasAdminDir" Condition="m_bHasAdminDirKnown">m_bHasAdminDir</Item>
      <Item Name="FileSize" Condition="m_bDirectoryKnown">m_fileSize</Item>
      <Item Name="IsWCRoot" Condition="m_bIsWCRootKnown">m_bIsWCRoot</Item>
      <Item Name="IsValidOnWindows" Condition="m_bIsValidOnWindowsKnown">m_bIsValidOnWindows</Item>
      <Item Name="IsReadOnly" Condition="m_bLastWriteTimeKnown">m_bIsReadOnly</Item>
      <Item Name="LastWriteTime" Condition="m_bLastWriteTimeKnown">m_lastWriteTime</Item>
      <Item Name="Stage">m_Stage</Item>
      <Item Name="ParentNo">m_ParentNo</Item>
      <Item Name="Action">(Actions)m_Action</Item>
      <Item Name="StatAdd">m_StatAdd</Item>
      <Item Name="StatDel">m_StatDel</Item>
      <Item Name="Checked">m_Checked</Item>
    </Expand>
  </Type>

  <Type Name="HKEY__">
    <DisplayString Condition="(( HKEY ) (ULONG_PTR)((LONG)0x80000000) )==this">HKCR</DisplayString>
    <DisplayString Condition="(( HKEY ) (ULONG_PTR)((LONG)0x80000001) )==this">HKCU</DisplayString>
    <DisplayString Condition="(( HKEY ) (ULONG_PTR)((LONG)0x80000002) )==this">HKLM</DisplayString>
    <DisplayString Condition="(( HKEY ) (ULONG_PTR)((LONG)0x80000003) )==this">HKU</DisplayString>
    <DisplayString>{(INT_PTR)this,h}</DisplayString>
  </Type>
  <Type Name="CRegTypedBase&lt;*,*&gt;">
    <DisplayString Condition="m_read">{{Base={(HKEY__*)m_base,na} Path={m_path} Key={m_key} Value={m_value}}}</DisplayString>
    <DisplayString Condition="m_read &amp;&amp; !m_exists">{{Base={(HKEY__*)m_base,na} Path={m_path} Key={m_key} Default value={m_defaultvalue}}}</DisplayString>
    <DisplayString>{{Base={(HKEY__*)m_base,na} Path={m_path} Key={m_key}}}</DisplayString>
    <Expand>
      <Item Name="HKey">m_base,na</Item>
      <Item Name="Path">m_path</Item>
      <Item Name="Key">m_key</Item>
      <Item Name="Value" Condition="m_read">m_value</Item>
      <Item Name="Default value" Condition="!m_exists">m_defaultvalue</Item>
      <Item Name="Read">m_read</Item>
      <Item Name="Exists">m_exists</Item>
    </Expand>
  </Type>
</AutoVisualizer>
