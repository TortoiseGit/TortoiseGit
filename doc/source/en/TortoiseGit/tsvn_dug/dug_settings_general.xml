<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 SYSTEM "../../../dtd/dblite.dtd">
<sect2 id="tsvn-dug-settings-main">
	<?dbhh topicname="HIDD_SETTINGSMAIN"?>
	<title>General Settings</title>
	<indexterm>
		<primary>sounds</primary>
	</indexterm>
	<indexterm>
		<primary>git.exe path</primary>
	</indexterm>
	<indexterm>
		<primary>Extern DLL Path</primary>
	</indexterm>
	<para>
		<figure id="tsvn-dug-settings-dia-main">
			<title>The Settings Dialog, General Page</title>
			<graphic fileref="../images/SettingsMain.png"/>
		</figure>
		This dialog allows you to specify your preferred language,
		and the Git-specific settings.
	</para>
	<variablelist>
		<varlistentry>
			<term>Language</term>
			<listitem>
				<para>
					Selects your user interface language.
					What else did you expect?
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Automatically check for newer versions every week</term>
			<listitem>
				<para>
					If checked, TortoiseGit will contact its download site once a week 
					to see if there is a newer version of the program available.
					Use <guibutton>Check now</guibutton> if you want an answer
					right away. The new version will not be downloaded; you
					simply receive an information dialog telling you that the
					new version is available.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>System sounds</term>
			<listitem>
				<para>
					TortoiseGit has three custom sounds which are installed by default.
					<itemizedlist>
						<listitem>
							<para>
							Error
							</para>
							</listitem>
						<listitem>
							<para>
							Notice
							</para>
						</listitem>
						<listitem>
							<para>
							Warning
							</para>
						</listitem>
					</itemizedlist>
					You can select different sounds (or turn these sounds
					off completely) using the Windows Control Panel.
					<guibutton>Configure</guibutton> is a shortcut to the Control Panel.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Create Library</term>
			<listitem>
				<para>
					On Windows 7 you can create a Library in which to group working copies
					which are scattered in various places on your system.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Git.exe Path</term>
			<listitem>
				<para>
					TortoiseGit needs to know which <literal>git.exe</literal> to use for it's operations. Enter the full path to <literal>git.exe</literal> here.
				</para>
				<para>
					<caution>
						<para>
							git.exe must not be marked to be run in elevated mode (i.e. "Run as administrator" or run in any compatibility mode).
						</para>
					</caution>
					<caution>
						<para>
							There is a <ulink url="https://github.com/msysgit/msysgit/issues/103"><citetitle>known issue in msysgit</citetitle></ulink>:
							msysGit provides two <literal>git.exe</literal>-files (one in a folder named <literal>bin</literal> and one in a folder named <literal>cmd</literal>).
							Make sure <guilabel>Git.exe Path</guilabel> points to the <literal>bin</literal>-folder within the msysgit installation folder.
						</para>
					</caution>
				</para>
				<para>
					<tip>
						<para>
							In order to debug problems you can open TortoiseGit advanced settings and set "DebugOutputString" to "true" (<xref linkend="tsvn-dug-settings-registry"/>). Start capturing the debug output.
							Then start TortoiseGit settings, click on <guilabel>Check now</guilabel> and observe the debug messages.
						</para>
					</tip>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>Extern DLL Path</term>
			<listitem>
				<para>
					If your git installation needs an extra entry in the PATH environment variable,
					you can enter it here and it will get added to the PATH environment variable automatically when TortoiseGit starts.
				</para>
				<para>
					This is especially needed if you installed the developer version of msysGit ("Full installer (self-contained) if you want to hack on Git" with the filename <literal>msysGit-fullinstall-*.exe</literal>),
					in this case it is necessary that the <literal>[MSYSGIT-INSTALL-PATH]\mingw\bin</literal>-folder is on the path (i.e. entered in the <guilabel>Extern DLL Path</guilabel> textbox) in order to execute git.exe.
				</para>
				<para>
					Often you can see if you need this when you start git.exe in <literal>[MSYSGIT-INSTALL-PATH]\mingw\bin</literal>-folder and you get a messagebox saying that a dll is missing.
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
	<sect3 id="tsvn-dug-settings-look-feel">
		<title>Context Menu Settings</title>
		<?dbhh topicname="HIDD_SETTINGSLOOKANDFEEL"?>
		<para>
			<figure id="tsvn-dug-settings-dia-context">
				<title>The Settings Dialog, Context Menu Page</title>
				<graphic fileref="../images/SettingsContext.png"/>
			</figure>
			This page allows you to specify which of the TortoiseGit context menu
			entries will show up in the main context menu, and which will appear
			in the TortoiseGit submenu. By default most items are unchecked and
			appear in the submenu.
		</para>
		<para>
			Most of the time, you won't need the TortoiseGit context menu, apart
			for folders that are under version control by Git. For non-
			versioned folders, you only really need the context menu when you
			want to do a checkout. If you check the option <literal>Hide menus
			for unversioned paths</literal>, TortoiseGit will not add its entries
			to the context menu for unversioned folders. But the entries are
			added for all items and paths in a versioned folder. And you can
			get the entries back for unversioned folders by holding the 
			<keycap>Shift</keycap> key down while showing the context menu.
		</para>
		<para>
			If there are some paths on your computer where you just don't want
			TortoiseGit's context menu to appear at all, you can list them in
			the box at the bottom.
		</para>
	</sect3>
	
	<sect3 id="tsvn-dug-settings-look-feel-extended">
		<title>Set Extend Menu Item</title>
		<?dbhh topicname="HIDD_SETTINGSEXTMENU"?>
		<para>
			<figure id="tsvn-dug-settings-ext-menu">
				<title>The Settings Dialog, Set Extend Menu Item</title>
				<graphic fileref="../images/SettingsExtendMenu.png"/>
			</figure>
			This page allows you to specify which of the TortoiseGit context menu
			entries will show up in the extend context menu (press <keycap>Shift</keycap>
			key on <action>right click</action>), 
			and which will appear in the normal context menu. 
			This config will help reduce the context menu number at normal usage case
			according to your usage module. 
		</para>
	</sect3>
	
	<sect3 id="tsvn-dug-settings-dialogs">
		<title>TortoiseGit Dialog Settings</title>
		<?dbhh topicname="HIDD_SETTINGSDIALOGS"?>
		<para>
			<figure id="tsvn-dug-settings-dia-dialogs">
				<title>The Settings Dialog, Dialogs Page</title>
				<graphic fileref="../images/SettingsDialog.png"/>
			</figure>
			This dialog allows you to configure some of TortoiseGit's
			dialogs the way you like them.
		</para>
		<variablelist>
			<varlistentry>
				<term>Font for log messages</term>
				<listitem>
					<para>
						Selects the font face and size used to display the log
						message itself in the middle pane of the Revision Log
						dialog, and when composing log messages in the Commit
						dialog.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Short date / time format in log messages</term>
				<listitem>
					<para>
						If the standard long messages use up too much 
						space on your screen use the short format.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>apply --topo-order</term>
				<listitem>
					<para>
						Normally log entries/commits are ordered in descending order of the commit date.
						'--topo-order' makes the commits appear in topological order (i.e. descendant
						commits are shown before their parents). Not using this option, might break
						the graph in the log dialog. However, this option is slower, because all
						log entries have to be processed before displaying them.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Can double-click in log list to compare with previous revision</term>
				<listitem>
					<para>
						If you frequently find yourself comparing revisions in the top
						pane of the log dialog, you can use this option to allow that
						action on double-click. It is not enabled by default because
						fetching the diff is often a long process, and many people
						prefer to avoid the wait after an accidental double-click,
						which is why this option is not enabled by default.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Abbreviate renamings</term>
				<listitem>
					<para>
						Normally renamed files are listed as "long/path/for/file.txt (from long/path/to/file.txt)".
						If you check this option renamed files will be listed in a shorter format ("long/path/{to => for}/file.txt"),
						however, this abbreviated format might be harder to understand.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Symbolize ref names</term>
				<listitem>
					<para>
						Show symbols on ref labels to substitute part of the ref names.
						If this option is enabled, the following description and example will apply.
						If there is only a single remote, a lightning symbol will substitute the remote name part of each remote branch.
						If the remote branch is the upstream of a local branch, an up triangle symbol will substitute the branch name part of the remote branch.
						<figure id="tsvn-dug-settings-symbolizerefname-example">
							<title>Example of Symbolize ref names</title>
							<graphic fileref="../images/SymbolizeRefNamesExample.png"/>
						</figure>
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Enable log cache</term>
				<listitem>
					<para>
						Load/saves log cache in .git folder (tortoisegit.data, tortoisegit.index) to boost performance of subsequent use of log list.
						If this option is disabled, the cache files are not read or written.
						Default is enabled.
					</para>
				</listitem>
			</varlistentry>
<!--
			<varlistentry>
				<term>Progress Dialog</term>
				<listitem>
					<para>
						TortoiseGit can automatically close all progress dialogs 
						when the action is finished without error. This setting
						allows you to select the conditions for closing the
						dialogs. The default (recommended) setting is
						<guilabel>Close manually</guilabel>
						which allows you to review all messages and check what
						has happened. However, you may decide that you want to
						ignore some types of message and have the dialog
						close automatically if there are no critical changes.
					</para>
					<para>
						<guilabel>Auto-close if no merges, adds or deletes</guilabel>
						means that the progress dialog will close if there were
						simple updates, but if changes from the repository were
						merged with yours, or if any files were added or deleted,
						the dialog will remain open. It will also stay open if
						there were any conflicts or errors during the operation.
					</para>
					<para>
						<guilabel>Auto-close if no merges, adds or deletes for
						local operations</guilabel> means that the progress dialog
						will close as for <guilabel>Auto-close if no merges, adds
						or deletes</guilabel> but only for local operations like adding
						files or reverting changes. For remote operations the
						dialog will stay open.
					</para>
					<para>
						<guilabel>Auto-close if no conflicts</guilabel>
						relaxes the criteria further and will close the dialog
						even if there were merges, adds or deletes. However,
						if there were any conflicts or errors, the dialog
						remains open.
					</para>
					<para>
						<guilabel>Auto-close if no errors</guilabel>
						always closes the dialog even if there were conflicts.
						The only condition that keeps the dialog open is an
						error condition, which occurs when Git is unable
						to complete the task. For example, an update fails
						because the server is inaccessible, or a commit fails
						because the working tree is out-of-date.
					</para>
				</listitem>
			</varlistentry>
-->
			<varlistentry>
				<term>Use recycle bin when reverting</term>
				<listitem>
					<para>
						When you revert local modifications, your changes are
						discarded. TortoiseGit gives you an extra safety net by
						sending the modified file to the recycle bin before
						bringing back the pristine copy. If you prefer to
						skip the recycle bin, uncheck this option.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Use auto-completion of file paths and keywords</term>
				<listitem>
					<para>
						The commit dialog includes a facility to parse the list
						of filenames being committed. When you type the first 3
						letters of an item in the list, the auto-completion
						box pops up, and you can press Enter to complete the
						filename. Check the box to enable this feature.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Timeout in seconds to stop the auto-completion parsing</term>
				<listitem>
					<para>
						The auto-completion parser can be quite slow if there are a lot
						of large files to check. This timeout stops the commit dialog
						being held up for too long. If you are missing important
						auto-completion information, you can extend the timeout.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Max. items to keep in the log message history</term>
				<listitem>
					<para>
						When you type in a log message in the commit dialog, TortoiseGit
						stores it for possible re-use later. By default it will keep the
						last 25 log messages for each repository, but you can customize
						that number here.
						If you have many different repositories, you may wish to
						reduce this to avoid filling your registry.
					</para>
					<para>
						Note that this setting applies only to messages that you type
						in on this computer. It has nothing to do with the log cache.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Select items automatically</term>
				<listitem>
					<para>
						The normal behaviour in the commit dialog is for all modified
						(versioned) items to be selected for commit automatically.
						If you prefer to start with nothing selected and pick the
						items for commit manually, uncheck this box.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</sect3>
	<sect3 id="tsvn-dug-settings-dialogs">
		<title>TortoiseGit Dialog Settings 3</title>
		<?dbhh topicname="HIDD_SETTINGSDIALOGS3"?>
		<para>
			<figure id="tsvn-dug-settings-dia-dialogs">
				<title>The Settings Dialog, Dialogs 3 Page</title>
				<graphic fileref="../images/SettingsDialog3.png"/>
			</figure>
			This dialog allows you to configure some of TortoiseGit's
			dialogs the way you like them.
			This third page mainly affects the Commit dialog and the settings which are stored in git config files.
		</para>
		<variablelist>
			<varlistentry>
				<term>Language</term>
				<listitem>
					<para>
						TortoiseGit can use spell checker modules which are also
						used by OpenOffice and Mozilla. If you have those installed
						this property will determine which spell checker to use, i.e.
						in which language the log messages for your project should
						be written.
						The <literal>tgit.projectlanguage</literal> config key sets the language
						module the spell checking engine should use when you enter
						a log message. You can find the values for your language
						on this page:
						<ulink url="http://msdn2.microsoft.com/en-us/library/ms776260.aspx">
							<citetitle>MSDN: Language Identifiers</citetitle>
						</ulink>.
					</para>
					<para>
						Enter this value in decimal. For example English (US) can be entered as <literal>1033</literal>.
					</para>
					<para>
						Use <literal>-1</literal> to disable the spell checker.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Limit</term>
				<listitem>
					<para>
						<literal>tgit.logminsize</literal>
						sets the minimum length of a log message for a commit.
						If you enter a shorter message than specified here, the commit button
						is disabled. This feature is very useful for reminding you to
						supply a proper descriptive message for every commit.
						If this property is not set,
						or the value is zero, empty log messages are allowed.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Border</term>
				<listitem>
					<para>
						<literal>tgit.logwidthmarker</literal> is used with projects which
						require log messages to be formatted with some maximum width
						(typically 72 characters) before a line break. Setting this
						property to a non-zero will place a marker to indicate the maximum width
						and performs line wrapping. Note: this feature
						will only work correctly if you have a fixed-width font
						selected for log messages.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</sect3>
	<sect3 id="tsvn-dug-settings-colours">
		<title>TortoiseGit Colour Settings</title>
		<?dbhh topicname="HIDD_SETTINGSCOLORS_1"?>
		<para>
			<figure id="tsvn-dug-settings-dia-colors">
				<title>The Settings Dialog, Colours Page</title>
				<graphic fileref="../images/SettingsColors.png"/>
			</figure>
			This dialog allows you to configure the text colours
			used in TortoiseGit's dialogs the way you like them.
		</para>
		<variablelist>
			<varlistentry>
				<term>Possible or real conflict / obstructed</term>
				<listitem>
					<para>
						A conflict has occurred during update, or may occur during merge.
						Update is obstructed by an existing unversioned file/folder of
						the same name as a versioned one.
					</para>
					<para>
						This colour is also used for error messages in the progress dialogs.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Added files</term>
				<listitem>
					<para>
						Items added to the repository.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Missing / deleted / replaced</term>
				<listitem>
					<para>
						Items deleted from the repository, missing from the working
						copy, or deleted from the working tree and replaced with
						another file of the same name.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Merged</term>
				<listitem>
					<para>
						Changes from the repository successfully merged into the working tree
						without creating any conflicts.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Modified / copied</term>
				<listitem>
					<para>
						Add with history, or paths copied in the repository.
						Also used in the log dialog for entries which include
						copied items.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Note node</term>
				<listitem>
					<para>
						A reference which points to git notes, under refs/notes namespace.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Use local branch color for current branch</term>
				<listitem>
					<para>
						In revision graph, use local branch color for current branch.
						You may not want to emphasize current branch of a local
						repository in revision graph.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</sect3>
	<sect3 id="tsvn-dug-settings-colours2">
		<title>TortoiseGit Colour Settings 2</title>
		<?dbhh topicname="HIDD_SETTINGSCOLORS_2"?>
		<para>
			<figure id="tsvn-dug-settings-dia-colors2">
				<title>The Settings Dialog, Colours Page</title>
				<graphic fileref="../images/SettingsColors2.png"/>
			</figure>
			This dialog allows you to configure the text colours
			used in TortoiseGit's dialogs the way you like them.
		</para>
	</sect3>
	<sect3 id="tsvn-dug-settings-colours3">
		<title>TortoiseGit Colour Settings 3</title>
		<?dbhh topicname="HIDD_SETTINGSCOLORS_3"?>
		<para>
			<figure id="tsvn-dug-settings-dia-colors-3">
				<title>The Settings Dialog, Colours Page</title>
				<graphic fileref="../images/SettingsColors3.png"/>
			</figure>
			This dialog allows you to configure the line colours, line width and node size
			in the graph column used in TortoiseGit's log dialog the way you like them.
		</para>
	</sect3>
</sect2>